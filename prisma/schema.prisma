generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-1.1.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

enum State {
  OPEN
  SOLVED
  CLOSED
}

model User {
  id Int @id @default(autoincrement())
  username String @unique @db.VarChar(25)
  email String @unique @db.VarChar(50)
  age Int
  role Role @default(USER)
  records Records[]
  files File[]

  @@unique([email, username])
}

model Records {
  id Int @id @default(autoincrement())
  state State @default(OPEN)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  title String @db.VarChar(50)
  senderName String
  content String?
  userId Int
  user User @relation(fields: [userId], references: [id])
  files File[]

  @@index([userId], name: "idx_userId")
  @@index([createdAt], name: "idx_createdAt")
}

model File {
  id Int @id @default(autoincrement())
  fileUrl String @db.VarChar(255)
  uploadedAt DateTime @default(now())
  userId Int
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  recordId Int
  record Records @relation(fields: [recordId], references: [id], onDelete: Cascade)

  @@index([userId], name: "idx_userId_file")
  @@index([recordId], name: "idx_recordId_file")
  @@index([uploadedAt], name: "idx_uploadedAt")
}
